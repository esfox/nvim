local helpers = require("helpers")

nvim_tree_keep_open = helpers.is_wide()

return {
  "nvim-tree/nvim-tree.lua",
  config = function()
    local on_attach = function(buffer_number)
      local nvim_tree_api = require("nvim-tree.api")
      nvim_tree_api.config.mappings.default_on_attach(buffer_number)
      keymaps.for_nvim_tree(buffer_number)
    end

    local options = {
      on_attach = on_attach,
      sync_root_with_cwd = true,
      hijack_unnamed_buffer_when_opening = false,
      view = {
        -- side = helpers.is_laptop() and 'left' or 'right',
        side = "left",
        width = helpers.is_laptop() and 45 or 55,
        number = true,
        relativenumber = true,
        float = {
          enable = true,
          quit_on_focus_loss = false,
          open_win_config = {
            width = 100,
            height = 55,
          },
        },
      },
      live_filter = {
        always_show_folders = false,
      },
      live_filter = {
        always_show_folders = false,
      },
      git = {
        ignore = false,
      },
      renderer = {
        icons = {
          glyphs = {
            git = {
              unstaged = "",
              staged = "",
              unmerged = "",
              renamed = "➜",
              untracked = "",
              deleted = "",
              ignored = "",
            },
          },
        },
        root_folder_label = function(path)
          return vim.fn.fnamemodify(path, ":t")
        end,
        highlight_git = true,
        highlight_modified = "all",
      },
      actions = {
        open_file = {
          quit_on_open = true,
          -- quit_on_open = not helpers.is_wide(),
        },
      },
    }

    -- vim.api.nvim_create_autocmd({ "VimEnter" }, {
    --   callback = function()
    --     if helpers.is_wide() then
    --       require("nvim-tree.api").tree.open()
    --     end
    --   end,
    -- })

    if not helpers.is_laptop() then
      options.view.side = "left"
      options.actions = {
        open_file = {
          quit_on_open = not helpers.is_wide(),
        },
      }
    end

    require("nvim-tree").setup(options)

  -- vim.keymap.set("n", "<leader>E", function()
  --   nvim_tree_keep_open = not nvim_tree_keep_open
  --   if nvim_tree_keep_open then
  --     vim.cmd("NvimTreeOpen")
  --   else
  --     vim.cmd("NvimTreeClose")
  --   end
  -- end)
  --
  -- vim.keymap.set({ "", "i" }, "<c-e>", function()
  --   if nvim_tree_keep_open then
  --     vim.cmd("NvimTreeFocus")
  --   else
  --     vim.cmd("NvimTreeToggle")
  --   end
  -- end)
  --
  -- vim.keymap.set("", "<leader>e", "<cmd>NvimTreeFindFile<CR>")

  local hop = require("hop")
  local nvim_tree_api = require("nvim-tree.api")

  if nvim_tree_keep_open then
    vim.keymap.set("n", "<c-e>", "<c-w><c-p>", { buffer = buffer_number, noremap = true })
  else
    vim.keymap.set(
      "n",
      "<c-e>",
      "<cmd>NvimTreeToggle<CR>",
      { buffer = buffer_number, noremap = true }
    )
  end

  vim.keymap.set("n", "H", "0", { buffer = buffer_number, noremap = true })
  vim.keymap.set(
    "n",
    "J",
    "10j",
    { desc = "Go down 10 lines", buffer = buffer_number, noremap = true }
  )
  vim.keymap.set(
    "n",
    "K",
    "10k",
    { desc = "Go up 10 lines", buffer = buffer_number, noremap = true }
  )

  vim.keymap.set(
    "n",
    "m",
    hop.hint_lines,
    { desc = "Hop", buffer = buffer_number, noremap = true, silent = true, nowait = true }
  )

  vim.keymap.set("n", "h", function()
    local node = nvim_tree_api.tree.get_node_under_cursor()
    if node == nil then
      return
    end

    if node.type == "directory" and node.open then
      nvim_tree_api.node.open.edit()
    else
      nvim_tree_api.node.navigate.parent()
    end
  end, {
    desc = "Close if the selected node is an opened folder and go to parent if it is closed",
    buffer = buffer_number,
    noremap = true,
    silent = true,
  })

  vim.keymap.set("n", "<c-enter>", nvim_tree_api.tree.change_root_to_node, {
    desc = "cd into directory",
    buffer = buffer_number,
    noremap = true,
    silent = true,
  })

  vim.keymap.set(
    "n",
    "l",
    nvim_tree_api.node.open.edit,
    { desc = "Open", buffer = buffer_number, noremap = true, silent = true }
  )

  end,
}
